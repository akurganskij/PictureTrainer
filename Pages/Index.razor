@page "/"
@inject HttpClient http
@inject IStringLocalizer<IndexPage> Loc

<PageTitle>Index</PageTitle>
<h1 style="text-align:center;">@Loc["Greeting"]</h1>
<h2 style="text-align:center;"><a href="/constructor">@Loc["Create"]</a></h2>
<h3 style="text-align:center;">@Loc["Or"]</h3>
<h2 style="text-align:center;">@Loc["Gallery"]</h2>
<p>@text</p>

<ul class="task-cards">
    @* @if (problem.Count != 0)
    {
        @foreach (Problems pr in problem)
        {
            <li style="background-image: url('@images.Find(p => p.Id == pr.ImageId).Description'); ">
                <a href="/task/@pr.Id">
                    <div class="task-info">
                        <span class="title">@pr.Name</span>
                        <span class="title">@pr.Subject</span>
                    </div>
                </a>
            </li>
        }
    } *@
</ul>

@code{
    [Parameter]
    public string Culture { get; set; }

    private bool onHoover = false;
    private string text, url = "/task/";

    private List<Problems> problem;
    private List<Image> images;



    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                RequestUri = new Uri("https://api.cloudflare.com/client/v4/accounts/4411ee06c69c6b9ab4bdfad42402a438/d1/database/288ed470-8bb8-471a-98f2-b9eba8c04c22"),
                Headers =
{

    { "Authorization", "Bearer r8sUndKgzr85YjrixTUZgfG8UwmYURr_O29us-O-" },

            },
            };
        //request.SetBrowserRequestMode(BrowserRequestMode.NoCors);
        request.SetBrowserRequestCache(BrowserRequestCache.NoStore);
        using (var response = await http.SendAsync(request))
        {
            text = response.StatusCode.ToString();
            //var body = await response.Content.ReadAsStringAsync();
            //Console.WriteLine(body);
        }
        base.OnInitializedAsync();
    }
}
